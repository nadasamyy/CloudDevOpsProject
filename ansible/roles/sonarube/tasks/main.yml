---
- name: Install required packages
  dnf:
    name:
      - docker
      - python3
      - python3-pip
    state: present
    update_cache: yes

- name: Create virtual environment directory
  file:
    path: "{{ venv_path }}"
    state: directory
    mode: '0755'

- name: Create virtual environment
  command: "python3 -m venv {{ venv_path }}"
  args:
    creates: "{{ venv_path }}/bin/activate"

- name: Install requests package in virtualenv
  pip:
    name: "requests==2.31.0"
    state: present
    virtualenv: "{{ venv_path }}"

- name: Install Docker Python package in virtualenv
  pip:
    name: 
      - "docker>=7.1.0"
    state: present
    virtualenv: "{{ venv_path }}"

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Ensure docker group exists
  group:
    name: docker
    state: present

- name: Add current user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes

- name: Set proper permissions for Docker socket
  file:
    path: /var/run/docker.sock
    mode: '0666'
    state: file

- name: Restart Docker service
  systemd:
    name: docker
    state: restarted

- name: Wait for Docker socket
  wait_for:
    path: /var/run/docker.sock
    state: present
    timeout: 30

- name: Create Docker network
  docker_network:
    name: sonarqube_network
    state: present
  environment:
    PYTHONPATH: "{{ venv_path }}/lib/python3/site-packages"
  vars:
    ansible_python_interpreter: "{{ venv_path }}/bin/python"

- name: Deploy PostgreSQL container
  docker_container:
    name: sonarqube_db
    image: postgres:13
    networks:
      - name: sonarqube_network
    env:
      POSTGRES_USER: "{{ postgres_user }}"
      POSTGRES_PASSWORD: "{{ postgres_password }}"
      POSTGRES_DB: "{{ postgres_db }}"
    ports:
      - "{{ postgres_port }}:5432"
    restart_policy: always
    state: started
  environment:
    PYTHONPATH: "{{ venv_path }}/lib/python3/site-packages"
  vars:
    ansible_python_interpreter: "{{ venv_path }}/bin/python"

- name: Create SonarQube data directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0777'
  with_items:
    - /opt/sonarqube/data
    - /opt/sonarqube/extensions
    - /opt/sonarqube/logs

- name: Set VM max map count
  sysctl:
    name: vm.max_map_count
    value: '262144'
    state: present

- name: Deploy SonarQube container
  docker_container:
    name: sonarqube
    image: sonarqube:latest
    networks:
      - name: sonarqube_network
    env:
      SONAR_JDBC_URL: "jdbc:postgresql://sonarqube_db:5432/{{ postgres_db }}"
      SONAR_JDBC_USERNAME: "{{ postgres_user }}"
      SONAR_JDBC_PASSWORD: "{{ postgres_password }}"
    ports:
      - "{{ sonar_port }}:9000"
    volumes:
      - /opt/sonarqube/data:/opt/sonarqube/data
      - /opt/sonarqube/extensions:/opt/sonarqube/extensions
      - /opt/sonarqube/logs:/opt/sonarqube/logs
    restart_policy: always
    state: started
  environment:
    PYTHONPATH: "{{ venv_path }}/lib/python3/site-packages"
  vars:
    ansible_python_interpreter: "{{ venv_path }}/bin/python"

- name: Wait for SonarQube to start
  wait_for:
    port: "{{ sonar_port }}"
    timeout: 300

- name: Print access information
  debug:
    msg: "SonarQube will be accessible at http://localhost:{{ sonar_port }} (default credentials: admin/admin)"
