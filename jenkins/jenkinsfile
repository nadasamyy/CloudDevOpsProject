
@Library('shared-library') _  // Import the shared library

pipeline {
    agent any  // Use any available agent for running the pipeline

    environment {
        DOCKER_REGISTRY = 'docker.io/nadasamy181'  // Replace with your Docker registry

    }

    options {
        timestamps()  // Add timestamps to the console output
        timeout(time: 1, unit: 'HOURS')  // Set a timeout of 1 hour for the entire pipeline
        disableConcurrentBuilds()  // Disable concurrent builds
    }

    stages {
        // Git Checkout stage
        stage('Git Checkout') {
            steps {
                deleteDir()  // Clean the workspace
                checkout scm  // Checkout the source code from the repository
            }
        }

        // Unit Test stage
        stage('Unit Test') {
            tools {
                jdk 'JDK11'  // JDK configured in Jenkins Global Tool Configuration
            }
            steps {
                dir('.') {  // Set the working directory where gradlew is located
                    sh '''
                        java -version  // Check Java version
                        chmod +x ./gradlew  // Make gradlew executable
                        ./gradlew test  // Run the tests using Gradle
                    '''
                }
            }
            post {
                always {
                    junit '**/build/test-results/test/*.xml'  // Collect the test results from the specified location
                }
            }
        }

        // Build JAR stage
        stage('Build JAR') {
            steps {
                dir('.') {  // Set the working directory where build.gradle is located
                    sh '''
                        ./gradlew clean build -x test  // Clean the project and build the application excluding tests
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()  // Clean up the workspace after the build
        }
    }
}
